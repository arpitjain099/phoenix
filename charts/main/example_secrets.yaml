##############
# Example secrets
#
# Please replace the values with your own
#
# Becareful with top level overrides as they will override the defaults
# e.g. this would override the default in main/values.yaml
# api:
#   auth:
#
###################


superset:
  # # DEFAULTS:
  # # Uncomment to set
  # supersetNode:
    # connections:
      # # DEFAULTS:
      # # https://github.com/apache/superset/blob/master/helm/superset/values.yaml#L280-L284
      # db_host: '{{ .Release.Name }}-postgresql'
      # db_port: "5432"
      # db_user: superset
      # db_pass: superset
      # db_name: superset
  extraSecretEnv:
    # Generate with:
    # openssl rand -base64 42
    SUPERSET_SECRET_KEY: "<SET>"

  # # If you have enabled postgres
  # # Using defaults set your self if you want
  # postgresql:
    # auth:
      # # These need to match supersetNode.connections:
      # # - db_user: postgresql.auth.username
      # # - db_pass: postgresql.auth.password
      # # - db_name: postgresql.auth.database
      # # DEFAULTS
      # # https://github.com/apache/superset/blob/master/helm/superset/values.yaml#L778-L786
      # username: "superset"
      # password: "superset"
      # database: "superset"
      # postgresPassword: "postgres_pass"

oauth2-proxy:
  config:
    # Generate with:
    # openssl rand -base64 42
    cookieSecret: "<SET>"
    clientID: "<SET>"
    clientSecret: "<SET>"

# # If you have platformdb enabled
# # Only uncomment if you have platformdb enabled and don't want to use the defaults
# platformdb:
  # auth:
    # # DEFAULTS
    # username: "phiphi"
    # password: "phiphi_password"
    # database: "platform"
    # postgresPassword: "postgres_pass"

# # Using defaults uncomment is you want to set your own
# api:
  # db_auth:
    # # DEFAULTS
    # host: '{{ .Release.Name }}-postgresql'
    # port: "5432"
    # username: "phiphi"
    # password: "phiphi_password"
    # database: "platform"
    # postgresPassword: "postgres_pass"
    #
# Console
console:
  # You will need to set the sentryDsn if you want sentry to work
  # You will also have to add SENTRY_AUTH_TOKEN to the build environment (the environment that
  # builds the image)
  sentryDsn: ~

###############
# APIFY_API_KEYS
#
# !!!!!!!!!
# BEAWARE apify_api_keys is under api ie. api.apify_api_keys
# !!!!!!!!!
#
# The json needs to be a dictionary with: each key being the name of a phoenix environment
# and each corresponding value being the Apify key for that environment.
# Example:
# {
#  "main": "<key>",
#  "phoenix_env_1": "<key>"
# }
  # apify_api_keys:
  #   enabled: true
  #   json: |
  #     <JSON>
###################
# Prefect
###################
prefect:
  apiKey: <SET>

# These are not strictly secrets but are required for the prefect-worker
# to connect to the prefect cloud.
# It seemed like a good idea to put them here.
# To find this use the url of the prefect cloud app:
# https://app.prefect.cloud/account/abc-my-account-id-is-here/workspaces/123-my-workspace-id-is-here.
# prefect-worker:
  # worker:
    # cloudApiConfig:
      # accountId: <target account ID>
      # workspaceId: <target workspace ID>
      #

###################
# GCP
# This is used to store the GCP service account json
# This is used by the api to connect to GCP services
#
# To create a service account:
# https://cloud.google.com/iam/docs/creating-managing-service-accounts
# To create a key:
# https://cloud.google.com/iam/docs/creating-managing-service-account-keys
# To get the json:
# https://cloud.google.com/iam/docs/creating-managing-service-account-keys#iam-service-account-keys-create-console
###################
# gcp_service_account: 
#   enabled: true
#   json: |
    # <JSON>
