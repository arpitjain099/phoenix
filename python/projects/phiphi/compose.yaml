x-phoenix-bind:
  &default-bind
  type: bind
  source: ../../
  target: /app
  consistency: cached

services:
  api:
    image: "phiphi"
    env_file:
      - docker_env
    user: "${HOST_UID:-root}:${HOST_GID:-root}"
    build:
      context: ../../
      args:
        PROJECT: phiphi
    volumes:
      - *default-bind
    entrypoint: /app/projects/phiphi/entrypoint.sh
    command: [
      "uvicorn",
      "phiphi.api.main:app",
      "--host", "0.0.0.0",
      "--port", "80",
      "--log-config", "/app/projects/phiphi/log_configs/uvicorn.prod.yaml"
    ]
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
      postgres_test:
        condition: service_healthy
    environment:
      PREFECT_PROFILE: ${PREFECT_PROFILE:-default}
      PREFECT_API_KEY: ${PREFECT_API_KEY:-none}
      PREFECT_API_URL: ${PREFECT_API_URL:-none}
      # This is needed otherwise the uvicorn logs will not work as expected
      PREFECT_LOGGING_SETTINGS_PATH: /app/projects/phiphi/log_configs/prefect.prod.yaml
      PHIPHI_LOG_CONFIG: /app/projects/phiphi/log_configs/phiphi.prod.yaml
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dev_db
    ports:
      - 5432:5432
    expose:
      - "5432"
    volumes:
      - db-data:/var/lib/postgresql/data:cached
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  postgres_test:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test_db
    ports:
      - 5433:5432
    expose:
      - "5433"
    volumes:
      - test-db-data:/var/lib/postgresql/data:cached
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  test-db-data:
