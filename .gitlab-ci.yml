services:
  - docker:dind

stages:
  - test
  - helm

# GLOBAL VARIABLES
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  PHOENIX_CHART_MAIN_DIR: charts/main
  PHOENIX_CHART_MAIN_PACKAGE_PATH: phoenix_chart_main

# Run linting for console_ui
console_ui_linting:
  image: node:21.6.2
  stage: test
  script:
    - cd console_ui/
    - npm install
    - npm run lint


python_build_and_ci_projects:
  image: docker:latest
  stage: test
  script:
    - cd python
    - docker build --build-arg PROJECT=$PROJECT -t $PROJECT .
    - docker run $PROJECT make all path=projects/$PROJECT
  parallel:
    matrix:
      - PROJECT: [example_project_1]

python_ci_libs:
  stage: test
  image: python:3.11.8
  script:
    - cd python
    - make install path=libs/$LIB
    - make all path=libs/$LIB
  parallel:
    matrix:
      - LIB: [example_lib_1]

python_projects_phiphi_ci:
  image: docker:latest
  stage: test
  script:
    - apk update && apk add make
    - cd python/projects/phiphi/
    - make all

package_phoenix_chart_main:
  stage: helm
  image:
    name: alpine/helm:3.11.1
    # This is needed or will get an error that helm cannot be run
    entrypoint: [""]
  needs: [] # Allows to run this job without waiting for the previous ones
  script:
    - helm package $PHOENIX_CHART_MAIN_DIR -d $PHOENIX_CHART_MAIN_PACKAGE_PATH
  artifacts:
    paths:
      - $PHOENIX_CHART_MAIN_PACKAGE_PATH/*.tgz
    # Going to pushed to package registry so it is fine to expire
    expire_in: 1 hour
